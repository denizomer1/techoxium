---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import BlogComment from '../components/BlogComment.astro';
import FontSizeControl from '../components/FontSizeControl.astro';
import TextToSpeech from '../components/TextToSpeech.astro';

export interface LayoutProps {
	title?: string;
	description?: string;
	pubDate?: Date | string;
	locale?: string;
}

const { title = '', description = '', pubDate, locale = 'tr' } = Astro.props as LayoutProps;
---

<html lang={locale}>
  <head>
    <BaseHead title={title} description={description} locale={locale} />
  </head>

  <body>
    <Header locale={locale} />
    
    <main class="about-main">
      <article class="about-article">
        <header class="about-header">
          <div class="about-meta">
            <time class="about-date">
              <FormattedDate date={pubDate} />
            </time>
          </div>
          
          <h1 class="about-title">{title}</h1>
          
          <div class="accessibility-controls">
            <FontSizeControl locale={locale} />
            <TextToSpeech locale={locale} />
          </div>
        </header>

        <div class="about-content">
          <p class="about-description">{description}</p>
        </div>

        <BlogComment locale={locale} />
      </article>
    </main>
    
    <Footer locale={locale} />
  </body>
</html>

<style>
  .about-main {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem 1rem;
    min-height: calc(100vh - var(--header-height) - 200px);
  }
  
  .about-article {
    background: white;
    border-radius: var(--border-radius);
    overflow: hidden;
    box-shadow: var(--box-shadow);
    margin-bottom: 2rem;
  }
  
  .about-header {
    padding: 2rem;
    text-align: center;
    background: linear-gradient(135deg, rgb(var(--gray-light)), white);
    border-bottom: 1px solid rgb(var(--gray-light));
  }
  
  .about-meta {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: rgb(var(--gray));
    font-weight: 500;
  }
  
  .about-date {
    padding: 0.5rem 1rem;
    background: white;
    border-radius: 50px;
    box-shadow: 0 2px 8px rgba(var(--gray), 20%);
  }
  
  .about-title {
    font-size: clamp(1.75rem, 4vw, 2.5rem);
    font-weight: 800;
    line-height: 1.2;
    color: rgb(var(--black));
    margin: 0 0 1rem 0;
  }
  
  .accessibility-controls {
    display: flex;
    gap: 1rem;
    align-items: center;
    justify-content: center;
    margin: 2rem auto 0;
    padding: 1rem;
    background: var(--gray-gradient);
    border-radius: var(--border-radius);
    border: 1px solid var(--gray-light);
    max-width: 600px;
  }
  
  @media (max-width: 640px) {
    .accessibility-controls {
      flex-direction: column;
      gap: 0.5rem;
    }
  }
  
  .about-content {
    padding: 2rem;
  }
  
  .about-description {
    font-size: 1.2rem;
    color: rgb(var(--gray-dark));
    line-height: 1.7;
    text-align: center;
    white-space: pre-line;
    margin: 0;
  }
  
  /* Mobile responsiveness */
  @media (max-width: 768px) {
    .about-main {
      padding: 1rem;
    }
    
    .about-header {
      padding: 1.5rem;
    }
    
    .about-content {
      padding: 1.5rem;
    }
    
    .about-description {
      font-size: 1rem;
    }
  }
  
  :global(html.dark) .about-article {
    background: #2a2a38;
  }
  
  :global(html.dark) .about-header {
    background: linear-gradient(135deg, #1f1f2e, #2a2a38);
    border-bottom-color: #404040;
  }
  
  :global(html.dark) .about-date {
    background: #1f1f2e;
    color: white;
  }
  
  :global(html.dark) .about-title {
    color: white;
  }
  
  :global(html.dark) .about-description {
    color: rgb(200, 200, 200);
  }
</style>
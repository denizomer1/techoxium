---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import PostCard from '../../components/PostCard.astro';

const rawPosts = await getCollection('blog');
const posts = rawPosts
	.map((p) => ({
		...p,
		data: { ...p.data, pubDate: p.data.pubDate instanceof Date ? p.data.pubDate : new Date(p.data.pubDate as any) },
	}))
	.sort((a, b) => Number(b.data.pubDate) - Number(a.data.pubDate));

---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			ul { list-style:none; margin:0; padding:0; display:grid; grid-template-columns:repeat(auto-fit,minmax(240px,1fr)); gap:1.15rem; }
			@media (min-width:1400px){ ul { grid-template-columns:repeat(auto-fit,minmax(260px,1fr)); } }
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				<ul class="post-list">
					{posts.map((post, i) => (
						<PostCard
							index={i}
							href={`/${post.slug ?? post.id}/`}
							title={post.data.title}
							pubDate={post.data.pubDate}
							heroImage={post.data.heroImage}
							large={i === 0}
						/>
					))}
				</ul>
			</section>
		</main>
		<Footer />
		<script type="module">
			// Animate blog list cards when entering viewport (reuse same pattern as home)
			if (typeof window !== 'undefined') {
				const list = document.querySelector('.post-list');
				if (list) {
					const show = () => list.classList.add('in-view');
					if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) { show(); }
					else if ('IntersectionObserver' in window) {
						new IntersectionObserver((ents, io) => { ents.forEach(e=>{ if(e.isIntersecting){ show(); io.disconnect(); } }); }, { threshold:0.08 }).observe(list);
					} else show();
				}
			}
		</script>
	</body>
</html>

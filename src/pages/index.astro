---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { getCollection } from 'astro:content';
import PostCard from '../components/PostCard.astro';

const rawPosts = await getCollection('blog');
const posts = rawPosts
	.map((p: any) => ({
		...p,
		data: { ...p.data, date: p.data.date instanceof Date ? p.data.date : new Date(p.data.date as any) },
	}))
	.sort((a: any, b: any) => Number(b.data.date) - Number(a.data.date));
const [firstPost, ...restPosts] = posts;
---

<html lang="tr" class={Astro.cookies.get('theme')?.value === 'dark' ? 'dark' : ''}>
	<head>
		<BaseHead title="Techoxium - Teknoloji ve Bilim Blogu" description="Teknoloji, bilim ve güncel gelişmeler hakkında Türkçe içerikler." />
		
		<script define:vars={{ posts: rawPosts }}>
			window.posts = posts;
		</script>
		
		<!-- Structured Data for Website -->
		<script is:inline type="application/ld+json" set:html={
			JSON.stringify({
				"@context": "https://schema.org",
				"@type": "WebSite",
				"name": "Techoxium",
				"description": "Teknolojinin Elementi",
				"url": "https://techoxium.com",
				"publisher": {
					"@type": "Organization",
					"name": "Techoxium",
					"logo": {
						"@type": "ImageObject",
						"url": "https://techoxium.com/logo.png"
					}
				}
			})
		} />
	</head>
	<body>
		<script>
			(function(){
				const pref = document.cookie.match(/(?:^|; )theme=([^;]+)/)?.[1];
				const sysDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
				if(pref === 'dark' || (!pref && sysDark)) {
					document.documentElement.classList.add('dark');
				} else {
					document.documentElement.classList.remove('dark');
				}
			})();
		</script>
		<Header />
		<main>
			<section>
				{firstPost && (
					<div class="featured-list">
						<PostCard
							href={`/${firstPost.id}/`}
							title={firstPost.data.title || 'Untitled'}
							description={firstPost.data.description || ''}
							date={firstPost.data.date}
							image={firstPost.data.image}
							large={true}
							tags={firstPost.data.tags}
						/>
					</div>
				)}
				<div class="post-list grid grid-2">
					{restPosts.map((post: any) => (
						<PostCard
							href={`/${post.id}/`}
							title={post.data.title || 'Untitled'}
							description={post.data.description || ''}
							date={post.data.date}
							image={post.data.image}
							tags={post.data.tags}
						/>
					))}
				</div>
			</section>
		</main>
		<Footer />
	</body>
</html>

<script define:vars={{ posts: rawPosts }}>
  window.posts = posts;
</script>

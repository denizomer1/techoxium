---
import BaseHead from '../../../components/BaseHead.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';
import { getCollection } from 'astro:content';
import PostCard from '../../../components/PostCard.astro';
import { t } from '../../../i18n/utils';

export const prerender = false;

const { tag } = Astro.params as { tag: string };
const locale = 'en';

const posts = await getCollection('blogEn', ({ data }: { data: any }) => {
	return data.tags?.some((t: string) => 
		t.toLowerCase().replace(/[^a-z0-9]/g, '-').replace(/-+/g, '-').replace(/^-|-$/g, '') === tag
	);
});

const sortedPosts = posts
	.map((p: any) => ({
		...p,
		data: { ...p.data, pubDate: p.data.pubDate instanceof Date ? p.data.pubDate : new Date(p.data.pubDate as any) },
	}))
	.sort((a: any, b: any) => Number(b.data.pubDate) - Number(a.data.pubDate));

const tagTitle = tag.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase());
---

<html lang={locale} class={Astro.cookies.get('theme')?.value === 'dark' ? 'dark' : ''}>
	<head>
		<BaseHead title={`${tagTitle} - ${t(locale, 'site.title')}`} description={`Posts about ${tagTitle}`} locale={locale} />
	</head>
	<body>
		<script>
			(function(){
				const pref = document.cookie.match(/(?:^|; )theme=([^;]+)/)?.[1];
				const sysDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
				if(pref === 'dark' || (!pref && sysDark)) {
					document.documentElement.classList.add('dark');
				} else {
					document.documentElement.classList.remove('dark');
				}
			})();
		</script>
		<Header locale={locale} />
		<main>
			<h1>#{tagTitle}</h1>
			<p>{sortedPosts.length} posts found</p>
			<section>
				<div class="post-list grid grid-2">
					{sortedPosts.map((post: any) => (
						<PostCard
							href={`/en/${post.id}/`}
							title={post.data.title || 'Untitled'}
							description={post.data.description || ''}
							pubDate={post.data.pubDate}
							heroImage={post.data.heroImage}
							locale={locale}
							tags={post.data.tags}
						/>
					))}
				</div>
			</section>
		</main>
		<Footer />
	</body>
</html>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: rgb(var(--accent-dark));
		font-size: 20px;
		line-height: 1.6;
	}
	
	h1 {
		font-size: 3rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
		background: linear-gradient(135deg, #667eea, #764ba2);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
	}

	p {
		text-align: center;
		color: #666;
		margin-bottom: 2rem;
	}

	.post-list {
		display: grid;
		gap: 2rem;
		margin-bottom: 2rem;
	}

	.grid-2 {
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
	}

	/* Dark mode */
	:global(html.dark) h1 {
		color: #f5f7fa !important;
		background: linear-gradient(135deg, #7fb3ff, #9f7aea) !important;
		-webkit-background-clip: text !important;
		-webkit-text-fill-color: transparent !important;
		background-clip: text !important;
	}

	:global(html.dark) p {
		color: #ccc !important;
	}

	@media (max-width: 720px) {
		main {
			padding: 1rem;
		}
		
		h1 {
			font-size: 2rem;
		}
		
		.grid-2 {
			grid-template-columns: 1fr;
		}
	}
</style>

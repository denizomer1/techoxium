---
import { t } from '../i18n/utils';

export interface Props {
  locale?: string;
}

const { locale = 'tr' } = Astro.props;
---

<div class="comments-container">
  <button class="comment-toggle" id="comment-toggle" type="button" aria-expanded="false">
    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"/>
    </svg>
    <span id="toggle-text">{t(locale, 'blog.showComments')}</span>
    <svg class="chevron" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <path d="M6 9l6 6 6-6"/>
    </svg>
  </button>
  
  <div class="comments-section" id="comments-section">
    <div id="disqus_thread"></div>
  </div>
</div>

<style>
  .comments-container {
    margin-top: 3rem;
  }
  
  .comment-toggle {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    padding: 1rem 2rem;
    background: var(--accent);
    color: white;
    border: none;
    border-radius: var(--border-radius);
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
    box-shadow: 0 4px 14px rgba(var(--accent-rgb), 0.3);
    position: relative;
    overflow: hidden;
  }
  
  .comment-toggle::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: all 0.4s ease;
  }
  
  .comment-toggle:hover::before {
    width: 300px;
    height: 300px;
  }
  
  .comment-toggle:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(var(--accent-rgb), 0.4);
  }
  
  .comment-toggle:active {
    transform: translateY(0);
  }
  
  .comment-toggle svg {
    width: 1.25rem;
    height: 1.25rem;
    flex-shrink: 0;
  }
  
  .chevron {
    transition: transform 0.3s ease;
  }
  
  .comment-toggle.active .chevron {
    transform: rotate(180deg);
  }
  
  .comments-section {
    max-height: 0;
    overflow: hidden;
    transition: all 0.4s cubic-bezier(0.4, 0.0, 0.2, 1);
    opacity: 0;
    margin-top: 0;
  }
  
  .comments-section.show {
    max-height: 1000px;
    opacity: 1;
    margin-top: 1.5rem;
  }
  
  #disqus_thread {
    padding: 1.5rem;
    background: white;
    border-radius: var(--border-radius);
    box-shadow: 0 4px 20px rgba(var(--gray-rgb), 0.1);
    border: 1px solid rgb(var(--gray-light));
  }
  
  :global(html.dark) #disqus_thread {
    background: #1f1f2e;
    border-color: #404040;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  }
</style>

<script is:inline define:vars={{ locale, showCommentsText: t(locale, 'blog.showComments'), hideCommentsText: t(locale, 'blog.hideComments'), loadFailedText: locale === 'en' ? 'Comments failed to load. Please refresh the page.' : 'Yorumlar yüklenemedi. Lütfen sayfayı yenileyin.' }}>
  const toggle = document.getElementById('comment-toggle');
  const section = document.getElementById('comments-section');
  const toggleText = document.getElementById('toggle-text');
  
  let commentsLoaded = false;
  let isVisible = false;
  
  function loadDisqus() {
    if (commentsLoaded) return;
    
    // Clear any existing Disqus elements
    const thread = document.getElementById('disqus_thread');
    if (thread) {
      thread.innerHTML = '';
    }
    
    // Reset Disqus if it was loaded before
    if (window.DISQUS) {
      window.DISQUS.reset({
        reload: true,
        config: function () {
          this.page.identifier = window.location.pathname;
          this.page.url = window.location.href;
          this.page.title = document.title;
        }
      });
      commentsLoaded = true;
      return;
    }
    
    const disqusShortname = 'tekhaza';
    
    // Set global Disqus configuration
    window.disqus_config = function() {
      this.page.url = window.location.href;
      this.page.identifier = window.location.pathname;
      this.page.title = document.title;
    };
    
    // Create and load the Disqus script
    const script = document.createElement('script');
    script.src = `https://${disqusShortname}.disqus.com/embed.js`;
    script.setAttribute('data-timestamp', String(Date.now()));
    script.async = true;
    
    script.onload = () => {
      console.log('Disqus loaded successfully');
      commentsLoaded = true;
    };
    
    script.onerror = () => {
      console.error('Failed to load Disqus');
      const thread = document.getElementById('disqus_thread');
      if (thread) {
        thread.innerHTML = `<p style="text-align: center; color: var(--gray);">${loadFailedText}</p>`;
      }
    };
    
    (document.head || document.body).appendChild(script);
  }
  
  function toggleComments() {
    isVisible = !isVisible;
    
    toggle.classList.toggle('active', isVisible);
    section.classList.toggle('show', isVisible);
    toggle.setAttribute('aria-expanded', String(isVisible));
    
    toggleText.textContent = isVisible ? hideCommentsText : showCommentsText;
    
    if (isVisible && !commentsLoaded) {
      // Small delay to allow the animation to start
      setTimeout(loadDisqus, 100);
    }
  }
  
  toggle.addEventListener('click', toggleComments);
  
  // Intersection Observer for performance
  const observer = new IntersectionObserver((entries) => {
    if (entries[0].isIntersecting && !commentsLoaded && isVisible) {
      loadDisqus();
      observer.disconnect();
    }
  });
  
  observer.observe(section);
</script>

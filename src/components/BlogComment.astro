---
/** Disqus universal embed component */
interface Props { pageUrl?: string; pageId?: string; enableCount?: boolean }
const { pageUrl = '', pageId = '', enableCount = false } = Astro.props;
---
<section class="comments-block" aria-labelledby="comments-title" data-state="idle" data-collapsed="false">
  <div class="comments-header-row">
    <h2 id="comments-title" class="comments-title">Yorumlar</h2>
    <button type="button" id="comments-toggle" class="comments-toggle-btn" aria-expanded="true" aria-controls="comments-shell">
      <span class="chevron" aria-hidden="true">▾</span>
      <span class="toggle-label">Gizle</span>
    </button>
  </div>
  <div class="comments-shell" id="comments-shell">
    <div class="comments-skeleton" id="comments-skeleton" aria-hidden="true">
      <div class="sk-row sk-title"></div>
      <div class="sk-row"></div>
      <div class="sk-row"></div>
      <div class="sk-row sk-short"></div>
    </div>
    <div class="comments-actions" id="comments-actions">
      <button type="button" id="load-comments" class="comments-load-btn">Yorumları Yükle</button>
      <button type="button" id="reload-comments" class="comments-reload-btn" hidden>Tekrar Dene</button>
    </div>
    <div id="disqus_thread" class="disqus-thread" role="region" aria-label="Disqus yorumları" tabindex="-1"></div>
  </div>
  <noscript>Lütfen JavaScript'i etkinleştirin: <a href="https://disqus.com/?ref_noscript">yorumları görmek için</a>.</noscript>
  <div class="comments-alt-link" id="comments-alt-link" hidden>
    <a href="https://tekhaza.disqus.com" target="_blank" rel="noopener">Disqus'ta aç</a>
  </div>
</section>
<script is:inline>
  // Disqus configuration (set before script inject)
  var disqus_config = function () {
    try {
      var loc = window.location;
      this.page.url = loc.protocol + '//' + loc.host + loc.pathname; // canonical
      this.page.identifier = loc.pathname.replace(/\/$/, '') || 'index';
      this.page.title = document.title;
      this.language = 'tr';
      this.callbacks = this.callbacks || {};
      this.callbacks.onNewComment = [function(comment){
        try { console.debug('[Disqus] Yeni yorum', comment && comment.id); } catch(e){}
      }];
    } catch (e) { console.warn('[Disqus] config error', e); }
  };

  (function(){
    if (typeof window === 'undefined') return;
  var stateEl = document.querySelector('.comments-block');
    var loadBtn = document.getElementById('load-comments');
    var reloadBtn = document.getElementById('reload-comments');
    var skeleton = document.getElementById('comments-skeleton');
    var altLink = document.getElementById('comments-alt-link');
    var container = document.getElementById('disqus_thread');
  var toggleBtn = document.getElementById('comments-toggle');
  var shell = document.getElementById('comments-shell');
    var loaded = false; var loading = false; var observerCreated = false;
    // Collapse / expand logic
    function applyCollapsed(coll){
      if(!shell || !toggleBtn || !stateEl) return;
      stateEl.setAttribute('data-collapsed', coll ? 'true' : 'false');
      toggleBtn.setAttribute('aria-expanded', coll ? 'false' : 'true');
      var labelEl = toggleBtn.querySelector('.toggle-label');
      if(labelEl) labelEl.textContent = coll ? 'Göster' : 'Gizle';
      if(coll){ shell.style.maxHeight = '0'; shell.style.overflow = 'hidden'; }
      else { shell.style.maxHeight = ''; shell.style.overflow = ''; }
    }
    var storedCollapse = localStorage.getItem('commentsCollapsed') === '1';
    applyCollapsed(storedCollapse);
    toggleBtn && toggleBtn.addEventListener('click', function(){
      var isColl = stateEl.getAttribute('data-collapsed') === 'true';
      var next = !isColl; localStorage.setItem('commentsCollapsed', next ? '1' : '0');
      applyCollapsed(next);
      if(!loaded && !next) { inject(); }
    });

    function setState(s){ if(stateEl) stateEl.setAttribute('data-state', s); }
    function showReload(){ if(reloadBtn){ reloadBtn.hidden = false; } if(loadBtn){ loadBtn.hidden = true; } if(skeleton){ skeleton.style.display='none'; } altLink && (altLink.hidden=false); setState('error'); }
    function hideSkeleton(){ skeleton && (skeleton.style.display='none'); loadBtn && (loadBtn.hidden=true); }

    function inject(){
      if (loaded || loading) return; loading = true; setState('loading'); hideSkeleton();
      if (window.DISQUS) { window.DISQUS.reset({ reload: true, config: disqus_config }); finalize(); return; }
      var d=document,s=d.createElement('script');
      s.src='https://tekhaza.disqus.com/embed.js';
      s.async=true; s.setAttribute('data-timestamp', Date.now());
      s.onload=function(){ finalize(); };
      s.onerror=function(){ console.warn('[Disqus] yükleme hatası'); showReload(); };
      (d.head||d.body).appendChild(s);
      // Safety timeout
      setTimeout(function(){ if(!loaded){ console.warn('[Disqus] timeout'); showReload(); } }, 12000);
    }
  function finalize(){
    loaded = true; setState('ready');
    if (window.innerWidth <= 430) {
      var shellEl = document.querySelector('.comments-shell');
      shellEl && shellEl.classList.add('compact');
      // Clamp tall iframe height periodically while Disqus expands
    // Add expand button for small devices
    addExpandControl();
      var attempts = 0; var clampTimer = setInterval(function(){
        attempts++;
        var ifr = document.querySelector('#disqus_thread iframe');
        if (!ifr) return;
        var maxH = Math.round(window.innerHeight * 0.7); // 70% viewport
        if (ifr.offsetHeight > maxH) {
          ifr.style.height = maxH + 'px';
          ifr.style.maxHeight = maxH + 'px';
        }
        if (attempts > 14) clearInterval(clampTimer);
      }, 500);
    }
  }

    // IntersectionObserver for auto-load when scrolled near
    function setupObserver(){
      if (!('IntersectionObserver' in window) || observerCreated) return; observerCreated = true;
      var io = new IntersectionObserver(function(entries){
        entries.forEach(function(ent){ if(ent.isIntersecting){ inject(); io.disconnect(); } });
      }, { rootMargin: '200px 0px' });
      io.observe(container);
    }

    // Event bindings
    loadBtn && loadBtn.addEventListener('click', inject);
    reloadBtn && reloadBtn.addEventListener('click', function(){ loaded=false; loading=false; inject(); });

  // Always use observer/manual load; no immediate auto-load on small screens to avoid large blank area
  setupObserver();

    function addExpandControl(){
      if (document.getElementById('comments-expand-btn')) return;
      var shellEl = document.getElementById('comments-shell');
      if (!shellEl) return;
      var btnWrap = document.createElement('div');
      btnWrap.className = 'comments-expand-wrap';
      var btn = document.createElement('button');
      btn.type = 'button';
      btn.id = 'comments-expand-btn';
      btn.className = 'comments-expand-btn';
      btn.setAttribute('aria-expanded','false');
      btn.setAttribute('aria-controls','disqus_thread');
      btn.textContent = 'Tam ekran';
      btn.addEventListener('click', function(){
        var ifr = document.querySelector('#disqus_thread iframe');
        var expanded = btn.getAttribute('aria-expanded') === 'true';
        if (!expanded) {
          btn.setAttribute('aria-expanded','true');
          btn.textContent = 'Daralt';
          shellEl.classList.add('expanded');
          if (ifr) { ifr.style.height=''; ifr.style.maxHeight=''; }
          window.scrollTo({ top: shellEl.getBoundingClientRect().top + window.scrollY - 56, behavior: 'smooth' });
        } else {
          btn.setAttribute('aria-expanded','false');
            btn.textContent = 'Tam ekran';
            shellEl.classList.remove('expanded');
            // Re-apply clamp
            var ifr2 = document.querySelector('#disqus_thread iframe');
            if (ifr2) {
              var maxH = Math.round(window.innerHeight * 0.7);
              ifr2.style.height = maxH + 'px';
              ifr2.style.maxHeight = maxH + 'px';
            }
        }
      });
      btnWrap.appendChild(btn);
      shellEl.appendChild(btnWrap);
    }

    // If user scrolls fast and misses intersection (rare), fallback to manual button remains.
  })();
</script>
{ enableCount && <script id="dsq-count-scr" src="//tekhaza.disqus.com/count.js" async></script> }
<noscript>Lütfen JavaScript'i etkinleştirin: <a href="https://disqus.com/?ref_noscript">yorumları görmek için</a>.</noscript>

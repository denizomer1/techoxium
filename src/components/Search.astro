<div class="search-root" data-enhanced>
  <div class="search-bar">
    <svg class="loop" width="18" height="18" viewBox="0 0 24 24" aria-hidden="true"><circle cx="11" cy="11" r="7" stroke="currentColor" stroke-width="2" fill="none"/><line x1="16.65" y1="16.65" x2="22" y2="22" stroke="currentColor" stroke-width="2" stroke-linecap="round"/></svg>
    <input class="search-input" type="search" placeholder="Ara..." aria-label="Search posts" autocomplete="off" />
    <button class="clear-btn" type="button" aria-label="Clear search" hidden>&times;</button>
    <kbd class="shortcut" aria-hidden="true">/</kbd>
  </div>
  <div class="results" role="listbox" aria-label="Search results" hidden></div>
</div>
<style>
.search-root { position: relative; max-width: 440px; font-size:14px; }
.search-bar { position:relative; display:flex; align-items:center; gap:.5rem; background:rgba(255,255,255,0.9); border:1px solid rgba(2,6,23,0.12); border-radius:14px; padding:0.45rem .65rem 0.45rem .65rem; box-shadow:0 2px 6px rgba(2,6,23,0.08),0 4px 14px -2px rgba(2,6,23,0.06); backdrop-filter:blur(8px); -webkit-backdrop-filter:blur(8px); transition: border-color .3s ease, box-shadow .35s ease, background .35s ease; }
.search-root:focus-within .search-bar { border-color: var(--accent); box-shadow:0 4px 18px -2px rgba(2,6,23,0.15),0 10px 26px -6px rgba(2,6,23,0.12); }
.search-input { flex:1; font:inherit; border:0; background:transparent; outline:none; padding:0.2rem 0; color:inherit; min-width:0; }
.search-input::placeholder { color:rgba(2,6,23,0.45); letter-spacing:.3px; }
.loop { opacity:.5; flex:0 0 auto; }
.clear-btn { background:transparent; border:0; color:rgba(2,6,23,0.55); font-size:1.15rem; line-height:1; cursor:pointer; padding:.15rem .25rem; border-radius:6px; }
.clear-btn:hover { background:rgba(2,6,23,0.06); }
.shortcut { display:inline-block; font-size:.65rem; font-weight:600; background:rgba(2,6,23,0.08); padding:.35rem .4rem .32rem; border-radius:6px; letter-spacing:.5px; border:1px solid rgba(2,6,23,0.15); font-family:ui-monospace, monospace; }
.results { position: absolute; left:0; right:0; top: calc(100% + 8px); background:rgba(255,255,255,0.92); border:1px solid rgba(2,6,23,0.12); border-radius:16px; overflow:hidden; box-shadow:0 10px 34px -4px rgba(2,6,23,0.18),0 22px 54px -10px rgba(2,6,23,0.16); backdrop-filter:blur(10px); -webkit-backdrop-filter:blur(10px); transform-origin: top center; animation: resultsIn .35s cubic-bezier(.2,.9,.2,1); }
@keyframes resultsIn { 0%{opacity:0; transform:translateY(4px) scale(.98);} 100%{opacity:1; transform:translateY(0) scale(1);} }
.result-item { position:relative; padding:0.75rem .85rem; display:flex; gap:0.75rem; align-items:center; border-bottom:1px solid rgba(2,6,23,0.06); text-decoration:none; color:inherit; background:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,0)); transition: background .3s, color .3s; }
.result-item:last-child { border-bottom:none; }
.result-item:hover, .result-item:focus-visible, .result-item[aria-selected="true"] { background:linear-gradient(90deg,rgba(2,6,23,0.06),rgba(2,6,23,0.02)); }
.result-item img { width:72px; height:48px; object-fit:cover; border-radius:10px; background:#eceff3; }
.result-item .meta { display:flex; flex-direction:column; gap:2px; }
.result-item .title { font-weight:650; margin:0; font-size:.83rem; line-height:1.2; }
.result-item .date { font-size:0.65rem; font-weight:500; letter-spacing:.5px; text-transform:uppercase; color:rgba(2,6,23,0.55); }
/* Stagger fade */
.result-item { opacity:0; transform:translateY(4px); animation: itemFade .4s cubic-bezier(.2,.9,.2,1) forwards; }
.result-item:nth-child(1){animation-delay:.04s;} .result-item:nth-child(2){animation-delay:.08s;} .result-item:nth-child(3){animation-delay:.12s;} .result-item:nth-child(4){animation-delay:.16s;} .result-item:nth-child(5){animation-delay:.20s;} .result-item:nth-child(6){animation-delay:.24s;} .result-item:nth-child(7){animation-delay:.28s;} .result-item:nth-child(8){animation-delay:.32s;}
@keyframes itemFade { to { opacity:1; transform:translateY(0);} }

/* Dark mode */
body.dark .search-bar { background:rgba(18,22,28,0.75); border-color:rgba(255,255,255,0.09); box-shadow:0 2px 8px -2px rgba(0,0,0,0.6),0 6px 20px -6px rgba(0,0,0,0.55); }
body.dark .search-root:focus-within .search-bar { border-color:rgba(123,159,255,0.7); box-shadow:0 4px 18px -4px rgba(0,0,0,0.7),0 14px 34px -8px rgba(0,0,0,0.65); }
body.dark .search-input::placeholder { color:rgba(255,255,255,0.45); }
body.dark .clear-btn { color:rgba(255,255,255,0.6); }
body.dark .clear-btn:hover { background:rgba(255,255,255,0.08); }
body.dark .shortcut { background:rgba(255,255,255,0.08); border-color:rgba(255,255,255,0.15); }
body.dark .results { background:rgba(18,22,28,0.88); border-color:rgba(255,255,255,0.08); box-shadow:0 14px 38px -6px rgba(0,0,0,0.75),0 28px 68px -14px rgba(0,0,0,0.65); }
body.dark .result-item { border-bottom-color:rgba(255,255,255,0.06); }
body.dark .result-item:hover, body.dark .result-item:focus-visible, body.dark .result-item[aria-selected="true"] { background:linear-gradient(90deg,rgba(255,255,255,0.08),rgba(255,255,255,0.04)); }
body.dark .result-item .date { color:rgba(255,255,255,0.5); }
body.dark .result-item img { background:#14191f; }

@media (max-width:520px){ .search-root { max-width:100%; } .result-item img { width:60px; height:40px; } }
@media (prefers-reduced-motion: reduce){ .result-item, .results { animation:none !important; transform:none !important; opacity:1 !important; } }
</style>

<script type="module">
const root = document.querySelector('.search-root');
const input = root?.querySelector('.search-input');
const results = root?.querySelector('.results');
const clearBtn = root?.querySelector('.clear-btn');
let posts = [];
let timer = null;
let activeIndex = -1;

async function loadPosts(){ if(posts.length) return; try { const res = await fetch('/api/posts.json'); posts = await res.json(); } catch { posts = []; } }
function dateFmt(d){ try { return new Date(d).toLocaleDateString(); } catch { return d; } }
function tpl(p,i){ return `<a class="result-item" role="option" data-idx="${i}" href="/${p.slug}/" aria-selected="false">${p.heroImage?`<img src="${p.heroImage}" alt="" loading="lazy" decoding="async"/>`:''}<div class="meta"><div class="title">${p.title}</div><div class="date">${dateFmt(p.pubDate)}</div></div></a>`; }
function search(q){ if(!q) return []; const qq=q.trim().toLowerCase(); return posts.filter(p=> (p.title||'').toLowerCase().includes(qq) || (p.description||'').toLowerCase().includes(qq)).slice(0,8); }
function render(list){ if(!results) return; if(!list.length){ results.hidden=true; results.innerHTML=''; activeIndex=-1; return; } results.hidden=false; results.innerHTML=list.map(tpl).join(''); activeIndex=-1; }
function updateActive(){ if(!results) return; const items = [...results.querySelectorAll('.result-item')]; items.forEach((el,i)=>{ if(i===activeIndex){ el.setAttribute('aria-selected','true'); el.focus(); } else el.setAttribute('aria-selected','false'); }); }
function clear(){ if(!input || !clearBtn) return; input.value=''; clearBtn.hidden=true; render([]); }

input?.addEventListener('input', ()=>{ if(!input) return; if(timer) clearTimeout(timer); clearBtn && (clearBtn.hidden = input.value.length===0); timer = window.setTimeout(()=>{ render(search(input.value)); }, 120); });
input?.addEventListener('focus', ()=>{ loadPosts(); if(input.value) render(search(input.value)); });
clearBtn?.addEventListener('click', ()=>{ clear(); input?.focus(); });
document.addEventListener('keydown', (e)=>{ if(e.key==='/' && document.activeElement!==input){ input?.focus(); e.preventDefault(); } });
document.addEventListener('keydown', (e)=>{ if(results?.hidden) return; const items = results?.querySelectorAll<HTMLAnchorElement>('.result-item'); if(!items.length) return; if(['ArrowDown','ArrowUp','Enter','Escape'].includes(e.key)) e.preventDefault(); if(e.key==='ArrowDown'){ activeIndex = (activeIndex+1) % items.length; updateActive(); } else if(e.key==='ArrowUp'){ activeIndex = (activeIndex - 1 + items.length) % items.length; updateActive(); } else if(e.key==='Enter'){ if(activeIndex>=0) items[activeIndex].click(); } else if(e.key==='Escape'){ render([]); } });
document.addEventListener('click', e=>{ if(!root?.contains(e.target)){ render([]); } });
</script>

<div class="search-wrapper">
  <div class="search-container">
    <svg class="search-icon" width="18" height="18" viewBox="0 0 24 24" aria-hidden="true">
      <circle cx="11" cy="11" r="7" stroke="currentColor" stroke-width="2" fill="none"/>
      <line x1="16.65" y1="16.65" x2="22" y2="22" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
    </svg>
    <input class="search-input" type="search" placeholder="Arama yapın..." aria-label="Search posts" autocomplete="off" />
    <button class="clear-btn" type="button" aria-label="Clear search">&times;</button>
  </div>
  <div class="search-results"></div>
</div>

<style>
.search-wrapper {
  position: relative;
}

.search-container {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  background: rgba(255,255,255,0.95);
  border: 2px solid rgba(2,6,23,0.1);
  border-radius: 50px;
  padding: 0.65rem 1rem;
  box-shadow: 0 2px 8px rgba(2,6,23,0.06);
  transition: all 0.3s ease;
  backdrop-filter: blur(10px);
  cursor: pointer;
}

.search-input {
  border: none;
  background: transparent;
  outline: none;
  font: inherit;
  flex: 1;
  padding: 0.3rem 0;
}

.search-icon {
  opacity: 0.6;
  color: var(--text-color, #333);
  flex-shrink: 0;
}

.clear-btn {
  background: transparent;
  border: 0;
  color: rgba(2,6,23,0.5);
  font-size: 1.25rem;
  cursor: pointer;
  padding: 0.2rem;
  border-radius: 50%;
  flex-shrink: 0;
  display: none;
}

.clear-btn:hover {
  background: rgba(2,6,23,0.08);
}

.search-results {
  position: absolute;
  top: calc(100% + 8px);
  left: 0;
  right: 0;
  background: white;
  border: 1px solid rgba(2,6,23,0.1);
  border-radius: 12px;
  box-shadow: 0 10px 40px rgba(2,6,23,0.15);
  z-index: 999999;
  max-height: 400px;
  overflow-y: auto;
  display: none;
}

.search-result {
  padding: 12px 16px;
  display: flex;
  gap: 12px;
  align-items: center;
  border-bottom: 1px solid rgba(2,6,23,0.05);
  text-decoration: none;
  color: inherit;
  transition: background 0.2s ease;
}

.search-result:hover {
  background: rgba(2,6,23,0.03);
}

.search-result:last-child {
  border-bottom: none;
}

.search-result img {
  width: 60px;
  height: 40px;
  object-fit: cover;
  border-radius: 8px;
  background: #f8f9fa;
}

.search-result-content {
  flex: 1;
}

.search-result-title {
  font-weight: 600;
  margin: 0 0 4px;
  font-size: 0.9rem;
  line-height: 1.3;
}

.search-result-date {
  font-size: 0.75rem;
  color: rgba(2,6,23,0.6);
}

/* Desktop - smaller search bar */
@media (min-width: 769px) {
  .search-container {
    width: 280px;
    min-width: 280px;
  }
  
  .search-input {
    font-size: 0.9rem;
  }
  
  .clear-btn.show {
    display: block;
  }
  
  .search-results {
    width: 280px;
  }
}

/* Mobile - always expanded */
@media (max-width: 768px) {
  .search-container {
    width: 100%;
    min-width: 250px;
  }
  
  .clear-btn.show {
    display: block;
  }
}

/* Dark mode */
html.dark .search-container {
  background: rgba(15,20,25,0.9);
  border-color: rgba(255,255,255,0.12);
}

html.dark .search-results {
  background: rgba(15,20,25,0.95);
  border-color: rgba(255,255,255,0.08);
}

html.dark .search-result {
  border-bottom-color: rgba(255,255,255,0.05);
  color: #e2e8f0;
}

html.dark .search-result:hover {
  background: rgba(255,255,255,0.05);
}
</style>

<script is:inline>
window.addEventListener('load', () => {
  const wrapper = document.querySelector('.search-wrapper');
  const container = wrapper?.querySelector('.search-container');
  const input = wrapper?.querySelector('.search-input');
  const results = wrapper?.querySelector('.search-results');
  const clearBtn = wrapper?.querySelector('.clear-btn');
  
  if (!wrapper || !container || !input || !results || !clearBtn) return;
  
  let posts = [
    {
      slug: 'test-search',
      title: 'Test Search Post',
      description: 'Bu bir test yazısı arama fonksiyonunu test etmek için',
      pubDate: '2025-08-23',
      heroImage: '/blog-placeholder-2.jpg'
    },
    {
      slug: 'javascript-modern',
      title: 'JavaScript Modern Özellikler',
      description: 'Modern JavaScript ile web geliştirme teknikleri',
      pubDate: '2025-08-21',
      heroImage: '/blog-placeholder-3.jpg'
    },
    {
      slug: 'rog-xbox',
      title: 'Rog Xbox Ally Geliyor',
      description: 'Xbox artık her yerde',
      pubDate: '2025-08-22',
      heroImage: '/blog-placeholder-4.png'
    }
  ];

  const turkishMonths = {
    1: 'ocak', 2: 'şubat', 3: 'mart', 4: 'nisan', 
    5: 'mayıs', 6: 'haziran', 7: 'temmuz', 8: 'ağustos',
    9: 'eylül', 10: 'ekim', 11: 'kasım', 12: 'aralık'
  };

  function formatDate(dateString) {
    try {
      const date = new Date(dateString);
      const day = date.getDate();
      const month = turkishMonths[date.getMonth() + 1];
      const year = date.getFullYear();
      return `${day} ${month} ${year}`;
    } catch {
      return dateString;
    }
  }

  function searchPosts(query) {
    if (!query.trim()) return [];
    const q = query.toLowerCase().trim();
    return posts.filter(post => 
      post.title.toLowerCase().includes(q) ||
      post.description.toLowerCase().includes(q)
    ).slice(0, 5);
  }

  function renderResults(resultList) {
    if (!resultList.length) {
      results.style.display = 'none';
      return;
    }

    const html = resultList.map(post => `
      <a href="/${post.slug}/" class="search-result">
        ${post.heroImage ? `<img src="${post.heroImage}" alt="" loading="lazy"/>` : ''}
        <div class="search-result-content">
          <div class="search-result-title">${post.title}</div>
          <div class="search-result-date">${formatDate(post.pubDate)}</div>
        </div>
      </a>
    `).join('');

    results.innerHTML = html;
    results.style.display = 'block';
  }

  // Event handlers
  input.addEventListener('input', (e) => {
    const query = e.target.value;
    
    if (query) {
      clearBtn.classList.add('show');
      const searchResults = searchPosts(query);
      renderResults(searchResults);
    } else {
      clearBtn.classList.remove('show');
      renderResults([]);
    }
  });

  input.addEventListener('blur', () => {
    setTimeout(() => {
      if (!wrapper.matches(':hover') && !input.value) {
        results.style.display = 'none';
      }
    }, 200);
  });

  clearBtn.addEventListener('click', () => {
    input.value = '';
    clearBtn.classList.remove('show');
    renderResults([]);
    input.focus();
  });

  // Close on outside click
  document.addEventListener('click', (e) => {
    if (!wrapper.contains(e.target)) {
      results.style.display = 'none';
    }
  });

  // Keyboard shortcut to focus search
  document.addEventListener('keydown', (e) => {
    if (e.key === '/' && document.activeElement !== input) {
      e.preventDefault();
      input.focus();
    }
  });
});
</script>
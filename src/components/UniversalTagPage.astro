---
import BaseHead from './BaseHead.astro';
import Header from './Header.astro';
import Footer from './Footer.astro';
import PostCard from './PostCard.astro';
import { getCollection } from 'astro:content';
import { postMatchesTag } from '../lib/tag-utils.js';

interface Props {
  tag: string;
}

const { tag } = Astro.props;

// Get posts
const posts = await getCollection('blog');
const matchingPosts = posts
  .filter((post: any) => postMatchesTag(post, tag))
  .map((p: any) => ({
    ...p,
    data: { ...p.data, date: p.data.date instanceof Date ? p.data.date : new Date(p.data.date as any) },
  }))
  .sort((a: any, b: any) => Number(b.data.date) - Number(a.data.date));

// SEO data
const title = `Etiket "${tag}" | Techoxium`;
const description = `${tag} etiketli yazılar - Teknoloji ve bilim içerikleri`;
---

<html lang="tr" class={Astro.cookies.get('theme')?.value === 'dark' ? 'dark' : ''}>
<head>
  <BaseHead
    title={title}
    description={description}
  />
</head>
<body>
  <Header />
  <main class="tag-main">
    <div class="container">
      <h1>#{tag}</h1>
      {matchingPosts.length === 0 ? (
        <p>{`" ${tag}" etiketi için yazı bulunamadı`}</p>
      ) : (
        <ul class="tag-list">
          {matchingPosts.map((post: any) => (
            <li class="tag-item">
              <PostCard
                href={`/${post.id}/`}
                title={post.data.title || 'Untitled'}
                description={post.data.description || ''}
                date={post.data.date}
                image={post.data.image}
                tags={post.data.tags}
              />
            </li>
          ))}
        </ul>
      )}
    </div>
  </main>
  <Footer />
</body>
</html>

---
import FormattedDate from './FormattedDate.astro';

interface Props {
  href: string;
  title: string;
  description?: string;
  pubDate?: Date | string;
  heroImage?: string;
  large?: boolean;
}

const { href, title, description = '', pubDate, heroImage, large = false } = Astro.props;
const date = pubDate ? (pubDate instanceof Date ? pubDate : new Date(pubDate)) : undefined;
---

<article class={`post-card${large ? ' post-card--large' : ''}`}>
  <a href={href} class="post-link">
    <div class="post-image">
      {heroImage && (
        <img 
          src={heroImage} 
          alt={title}
          width={720}
          height={360}
          loading="lazy"
          decoding="async"
        />
      )}
      <div class="post-overlay">
        <svg class="play-icon" viewBox="0 0 24 24" fill="white">
          <path d="M8 5v14l11-7z"/>
        </svg>
      </div>
    </div>
    
    <div class="post-content">
      <header>
        <div class="post-meta">
          {date && <FormattedDate date={date} />}
        </div>
        <h2 class="post-title">{title}</h2>
      </header>
      
      {description && <p class="post-description">{description}</p>}
      
      <div class="read-more">
        <span>Devamını Oku</span>
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M5 12h14M12 5l7 7-7 7"/>
        </svg>
      </div>
    </div>
  </a>
</article>

<style>
  .post-card {
    background: white;
    border-radius: var(--border-radius);
    overflow: hidden;
    box-shadow: var(--box-shadow);
    transition: var(--transition);
    height: 100%;
    display: flex;
    flex-direction: column;
  }
  
  .post-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 12px 48px rgba(var(--gray), 40%);
  }
  
  .post-link {
    text-decoration: none;
    color: inherit;
    height: 100%;
    display: flex;
    flex-direction: column;
  }
  
  .post-image {
    position: relative;
    aspect-ratio: 16/9;
    overflow: hidden;
    background: linear-gradient(45deg, rgb(var(--gray-light)), rgb(var(--gray)));
  }
  
  .post-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: var(--transition);
  }
  
  .post-card:hover .post-image img {
    transform: scale(1.05);
  }
  
  .post-overlay {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(0, 0, 0, 0.7);
    border-radius: 50%;
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: var(--transition);
    backdrop-filter: blur(10px);
  }
  
  .post-card:hover .post-overlay {
    opacity: 1;
  }
  
  .play-icon {
    width: 24px;
    height: 24px;
    margin-left: 2px;
  }
  
  .post-content {
    padding: 1.5rem;
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  .post-meta {
    font-size: 0.875rem;
    color: rgb(var(--gray));
    font-weight: 500;
  }
  
  .post-title {
    font-size: 1.25rem;
    font-weight: 700;
    line-height: 1.3;
    color: rgb(var(--black));
    margin: 0;
    transition: var(--transition);
  }
  
  .post-card--large .post-title {
    font-size: 1.5rem;
  }
  
  .post-card:hover .post-title {
    color: var(--accent);
  }
  
  .post-description {
    color: rgb(var(--gray-dark));
    line-height: 1.6;
    flex: 1;
    font-size: 0.95rem;
    margin: 0;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .read-more {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 500;
    color: var(--accent);
    font-size: 0.875rem;
    margin-top: auto;
    transition: var(--transition);
  }
  
  .read-more svg {
    width: 16px;
    height: 16px;
    transition: var(--transition);
  }
  
  .post-card:hover .read-more svg {
    transform: translateX(4px);
  }
  
  @media (max-width: 768px) {
    .post-content {
      padding: 1rem;
    }
    
    .post-title {
      font-size: 1.125rem;
    }
    
    .post-card--large .post-title {
      font-size: 1.25rem;
    }
    
    .post-overlay {
      width: 50px;
      height: 50px;
    }
    
    .play-icon {
      width: 20px;
      height: 20px;
    }
  }
  
  :global(html.dark) .post-card {
    background: #2a2a38;
  }
  
  :global(html.dark) .post-title {
    color: white;
  }
  
  :global(html.dark) .post-description {
    color: rgb(200, 200, 200);
  }
  
  @media (prefers-reduced-motion: reduce) {
    .post-card:hover {
      transform: none;
    }
    
    .post-image img {
      transform: none;
    }
    
    .read-more svg {
      transform: none;
    }
  }
</style>
---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
import Search from './Search.astro';
---

<header class="main-header">
  <nav class="nav-container">
    <div class="nav-brand">
      <a href="/" class="brand-link">
        <img src="/logo.png" alt={SITE_TITLE} width="32" height="32" />
        <span class="brand-text">{SITE_TITLE}</span>
      </a>
    </div>
    
    <div class="nav-header-actions">
      <button class="theme-toggle" id="theme-toggle" aria-label="Tema değiştir">
        <div class="theme-icon">
          <svg class="sun-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="5"/>
            <path d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42"/>
          </svg>
          <svg class="moon-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
          </svg>
        </div>
      </button>
      
      <button class="nav-toggle" id="nav-toggle" aria-label="Menüyü aç/kapat">
        <span></span>
        <span></span>
        <span></span>
      </button>
    </div>
    
    <div class="nav-menu" id="nav-menu">
      <div class="nav-search-mobile">
        <Search />
      </div>
      
      <div class="nav-links">
        <HeaderLink href="/">Ana Sayfa</HeaderLink>
        <HeaderLink href="/about/">Hakkımızda</HeaderLink>
      </div>
      
      <div class="nav-actions-desktop">
        <div class="nav-search">
          <Search />
        </div>
        
        <button class="theme-toggle theme-toggle-desktop" id="theme-toggle-desktop" aria-label="Tema değiştir">
          <div class="theme-icon">
            <svg class="sun-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="12" cy="12" r="5"/>
              <path d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42"/>
            </svg>
            <svg class="moon-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
            </svg>
          </div>
        </button>
      </div>
    </div>
  </nav>
</header>

<style>
  .main-header {
    position: sticky;
    top: 0;
    z-index: 1000;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border-bottom: 1px solid rgb(var(--gray-light));
    height: var(--header-height);
  }
  
  .nav-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 2rem;
  }
  
  .nav-brand {
    flex-shrink: 0;
  }
  
  .nav-header-actions {
    display: none;
    align-items: center;
    gap: 1rem;
  }
  
  .brand-link {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    text-decoration: none;
    color: rgb(var(--black));
    font-weight: 700;
    font-size: 1.25rem;
    transition: var(--transition);
  }
  
  .brand-link:hover {
    color: var(--accent);
  }
  
  .brand-text {
    font-family: 'Segoe UI', system-ui, sans-serif;
  }
  
  .nav-menu {
    display: flex;
    align-items: center;
    gap: 2rem;
    flex: 1;
    justify-content: space-between;
  }
  
  .nav-links {
    display: flex;
    align-items: center;
    gap: 1.5rem;
  }
  
  /* Modern click effects for nav items */
  :global(.nav-links a) {
    position: relative;
    padding: 0.5rem 1rem;
    border-radius: var(--border-radius);
    transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
    overflow: hidden;
  }
  
  :global(.nav-links a::before) {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(var(--accent-rgb), 0.1);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: all 0.3s ease;
    z-index: -1;
  }
  
  :global(.nav-links a:hover::before) {
    width: 200px;
    height: 200px;
  }
  
  :global(.nav-links a:active) {
    transform: scale(0.95);
  }
  
  :global(.nav-links a:hover) {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(var(--accent-rgb), 0.15);
  }
  
  .nav-actions {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  
  .nav-search {
    flex-shrink: 0;
  }
  
  .nav-search-mobile {
    display: none;
  }
  
  .nav-actions-desktop {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  
  .theme-toggle-desktop {
    display: flex;
  }
  
  /* Modern Theme Toggle */
  .theme-toggle {
    position: relative;
    background: rgba(255, 255, 255, 0.1);
    border: 2px solid rgba(var(--accent-rgb), 0.2);
    cursor: pointer;
    padding: 0.5rem;
    outline: none;
    border-radius: 50%;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    width: 44px;
    height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
    backdrop-filter: blur(10px);
    box-shadow: 
      0 2px 8px rgba(0, 0, 0, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }
  
  .theme-toggle:hover {
    background: rgba(var(--accent-rgb), 0.1);
    border-color: var(--accent);
    transform: scale(1.05);
    box-shadow: 
      0 4px 16px rgba(var(--accent-rgb), 0.2),
      inset 0 1px 0 rgba(255, 255, 255, 0.2);
  }
  
  .theme-toggle:active {
    transform: scale(0.95);
  }
  
  .theme-icon {
    position: relative;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .theme-icon svg {
    position: absolute;
    width: 20px;
    height: 20px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .sun-icon {
    color: #f59e0b;
    opacity: 1;
    transform: rotate(0deg) scale(1);
  }
  
  .moon-icon {
    color: #6366f1;
    opacity: 0;
    transform: rotate(-90deg) scale(0.5);
  }
  
  /* Dark mode state */
  .theme-toggle.dark {
    background: rgba(15, 20, 25, 0.8);
    border-color: rgba(99, 102, 241, 0.4);
  }
  
  .theme-toggle.dark:hover {
    background: rgba(99, 102, 241, 0.2);
    border-color: #6366f1;
  }
  
  .theme-toggle.dark .sun-icon {
    opacity: 0;
    transform: rotate(90deg) scale(0.5);
  }
  
  .theme-toggle.dark .moon-icon {
    opacity: 1;
    transform: rotate(0deg) scale(1);
  }
  
  /* Pulse animation for theme toggle */
  @keyframes theme-pulse {
    0%, 100% {
      box-shadow: 
        0 2px 8px rgba(0, 0, 0, 0.1),
        inset 0 1px 0 rgba(255, 255, 255, 0.1);
    }
    50% {
      box-shadow: 
        0 4px 16px rgba(var(--accent-rgb), 0.3),
        inset 0 1px 0 rgba(255, 255, 255, 0.2);
    }
  }
  
  .theme-toggle:focus-visible {
    animation: theme-pulse 1s infinite;
  }
  
  .nav-toggle {
    display: none;
    flex-direction: column;
    justify-content: space-around;
    width: 2rem;
    height: 2rem;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0.25rem;
    z-index: 10;
    border-radius: var(--border-radius);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }
  
  .nav-toggle::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(var(--accent-rgb), 0.1);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: all 0.3s ease;
    z-index: -1;
  }
  
  .nav-toggle:hover::before {
    width: 60px;
    height: 60px;
  }
  
  .nav-toggle:hover {
    transform: scale(1.1);
  }
  
  .nav-toggle:active {
    transform: scale(0.95);
  }
  
  .nav-toggle span {
    width: 1.5rem;
    height: 0.2rem;
    background: rgb(var(--black));
    border-radius: 2px;
    transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
    transform-origin: center;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  }
  
  .nav-toggle.active span:first-child {
    transform: rotate(45deg) translate(0.3rem, 0.3rem);
  }
  
  .nav-toggle.active span:nth-child(2) {
    opacity: 0;
    transform: scale(0);
  }
  
  .nav-toggle.active span:nth-child(3) {
    transform: rotate(-45deg) translate(0.3rem, -0.3rem);
  }
  
  /* Mobile styles */
  @media (max-width: 768px) {
    .nav-container {
      padding: 0 1rem;
    }
    
    .nav-header-actions {
      display: flex;
    }
    
    .nav-toggle {
      display: flex;
    }
    
    .nav-menu {
      position: fixed;
      top: var(--header-height);
      left: 0;
      right: 0;
      background: rgba(255, 255, 255, 0.98);
      backdrop-filter: blur(20px);
      flex-direction: column;
      padding: 1.5rem 1rem 2rem;
      gap: 1.5rem;
      transform: translateX(100%);
      transition: var(--transition);
      border-top: 1px solid rgb(var(--gray-light));
      box-shadow: 0 10px 40px rgba(var(--gray), 20%);
      height: calc(100vh - var(--header-height));
      overflow-y: auto;
    }
    
    .nav-menu.active {
      transform: translateX(0);
    }
    
    .nav-search-mobile {
      display: block;
      order: 2;
    }
    
    .nav-links {
      flex-direction: column;
      gap: 1rem;
      width: 100%;
      order: 1;
    }
    
    .nav-actions-desktop {
      display: none;
    }
    
    .nav-search {
      display: none;
    }
    
    .theme-toggle-desktop {
      display: none;
    }
    
    .brand-text {
      display: none;
    }
  }
  
  @media (max-width: 480px) {
    .nav-container {
      padding: 0 0.75rem;
    }
  }
  
  /* Dark mode styles */
  :global(html.dark) .main-header {
    background: rgba(15, 15, 23, 0.95);
    border-bottom-color: #404040;
  }
  
  :global(html.dark) .nav-menu {
    background: rgba(15, 15, 23, 0.98);
    border-top-color: #404040;
  }
  
  :global(html.dark) .brand-link {
    color: white;
  }
  
  :global(html.dark) .nav-toggle span {
    background: white;
  }
  
  :global(html.dark) .theme-toggle {
    background: rgba(15, 20, 25, 0.8);
    border-color: rgba(99, 102, 241, 0.3);
  }
  
  :global(html.dark) .theme-toggle:hover {
    background: rgba(99, 102, 241, 0.2);
    border-color: #6366f1;
  }
</style>

<script>
  const navToggle = document.getElementById('nav-toggle') as HTMLButtonElement;
  const navMenu = document.getElementById('nav-menu') as HTMLDivElement;
  const themeToggle = document.getElementById('theme-toggle') as HTMLButtonElement;
  const themeToggleDesktop = document.getElementById('theme-toggle-desktop') as HTMLButtonElement;
  
  // Navigation functionality
  function toggleNav() {
    navToggle.classList.toggle('active');
    navMenu.classList.toggle('active');
    document.body.style.overflow = navMenu.classList.contains('active') ? 'hidden' : '';
  }
  
  navToggle.addEventListener('click', toggleNav);
  
  // Close nav when clicking on links (mobile)
  navMenu.addEventListener('click', (e) => {
    if (e.target instanceof HTMLAnchorElement && window.innerWidth <= 768) {
      navToggle.classList.remove('active');
      navMenu.classList.remove('active');
      document.body.style.overflow = '';
    }
  });
  
  // Close nav when clicking outside (mobile)
  document.addEventListener('click', (e) => {
    if (!navToggle.contains(e.target as Node) && !navMenu.contains(e.target as Node) && !themeToggle.contains(e.target as Node)) {
      navToggle.classList.remove('active');
      navMenu.classList.remove('active');
      document.body.style.overflow = '';
    }
  });
  
  // Handle window resize
  window.addEventListener('resize', () => {
    if (window.innerWidth > 768) {
      navToggle.classList.remove('active');
      navMenu.classList.remove('active');
      document.body.style.overflow = '';
    }
  });
  
  // Theme toggle functionality
  function initTheme() {
    const savedTheme = localStorage.getItem('theme');
    const systemDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    const isDark = savedTheme === 'dark' || (!savedTheme && systemDark);
    
    document.documentElement.classList.toggle('dark', isDark);
    themeToggle.classList.toggle('dark', isDark);
    themeToggleDesktop?.classList.toggle('dark', isDark);
    themeToggle.setAttribute('aria-label', isDark ? 'Açık moda geç' : 'Koyu moda geç');
    themeToggleDesktop?.setAttribute('aria-label', isDark ? 'Açık moda geç' : 'Koyu moda geç');
  }
  
  function toggleTheme() {
    const isDark = document.documentElement.classList.contains('dark');
    const newTheme = isDark ? 'light' : 'dark';
    
    document.documentElement.classList.toggle('dark', newTheme === 'dark');
    themeToggle.classList.toggle('dark', newTheme === 'dark');
    themeToggleDesktop?.classList.toggle('dark', newTheme === 'dark');
    localStorage.setItem('theme', newTheme);
    themeToggle.setAttribute('aria-label', newTheme === 'dark' ? 'Açık moda geç' : 'Koyu moda geç');
    themeToggleDesktop?.setAttribute('aria-label', newTheme === 'dark' ? 'Açık moda geç' : 'Koyu moda geç');
  }
  
  // Initialize theme on page load
  initTheme();
  
  // Theme toggle event listeners
  themeToggle.addEventListener('click', toggleTheme);
  themeToggleDesktop?.addEventListener('click', toggleTheme);
  
  // Listen for system theme changes
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
    if (!localStorage.getItem('theme')) {
      document.documentElement.classList.toggle('dark', e.matches);
      themeToggle.classList.toggle('dark', e.matches);
      themeToggleDesktop?.classList.toggle('dark', e.matches);
      themeToggle.setAttribute('aria-label', e.matches ? 'Açık moda geç' : 'Koyu moda geç');
      themeToggleDesktop?.setAttribute('aria-label', e.matches ? 'Açık moda geç' : 'Koyu moda geç');
    }
  });
</script>

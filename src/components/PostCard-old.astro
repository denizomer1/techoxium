---
import FormattedDate from './FormattedDate.astro';
interface Props {
  href: string;
  title: string;
  description?: string;
  pubDate?: Date | string;
  heroImage?: string;
  large?: boolean;
  clampLines?: number;
}
const { href, title, description = '', pubDate, heroImage, large = false, clampLines = 3 } = Astro.props as Props;
const date = pubDate ? (pubDate instanceof Date ? pubDate : new Date(pubDate)) : undefined;
---
<li class={`post-card${large ? ' post-card--large' : ''}`}>
  <a href={href} aria-label={title} class="post-card__link">
    {heroImage && (
      <div class="post-card__media">
        <img
          src={heroImage}
          alt={title}
          width={large ? 1020 : 720}
          height={large ? 510 : 360}
          loading={large ? 'eager' : 'lazy'}
          fetchpriority={large ? 'high' : 'auto'}
          decoding="async"
          class="post-card__image"
        />
      </div>
    )}
  <h3 class="post-card__title">{title}</h3>
  {date && <p class="post-card__date"><FormattedDate date={date} /></p>}
  {description && <p class="post-card__desc" style={`-webkit-line-clamp: ${clampLines}`}>{description}</p>}
  </a>
</li>

<style>
.post-card { 
  list-style: none; 
  background: rgba(255,255,255,0.9);
  border: 1px solid rgba(2,6,23,0.08);
  border-radius: 16px; 
  padding: 0.9rem; 
  box-shadow: 0 4px 10px -2px rgba(2,6,23,0.08);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.post-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 20px -4px rgba(2,6,23,0.15);
}

.post-card__link { 
  display: block; 
  text-decoration: none; 
  color: inherit; 
  height: 100%; 
}

.post-card__media { 
  position: relative; 
  margin: 0 0 0.75rem; 
  padding: 0.9rem; 
  background: #f5f7fa; 
  border: 1px solid rgba(2,6,23,0.06); 
  border-radius: 18px; 
  box-shadow: 0 4px 14px -4px rgba(2,6,23,0.08);
}

.post-card--large .post-card__media { 
  padding: 1.05rem; 
}

.post-card__image { 
  display: block; 
  width: 100%; 
  height: auto; 
  border-radius: 14px; 
  aspect-ratio: 16/9; 
  object-fit: cover; 
  background: #eceff3; 
}

.post-card__title { 
  margin: 0.75rem 0 0.35rem; 
  font-size: 1.05rem; 
  line-height: 1.2; 
}

.post-card--large .post-card__title { 
  font-size: 1.4rem; 
}

.post-card__date { 
  margin: 0; 
  font-size: 0.76rem; 
  font-weight: 500; 
  text-transform: uppercase; 
  color: rgba(2,6,23,0.55); 
}

.post-card__desc { 
  margin: 0.5rem 0 0; 
  font-size: 0.78rem; 
  line-height: 1.45; 
  color: rgba(2,6,23,0.7); 
  display: -webkit-box; 
  -webkit-box-orient: vertical; 
  overflow: hidden; 
}

.post-card--large .post-card__desc { 
  font-size: 0.9rem; 
  line-height: 1.5; 
}

/* Dark mode */
body.dark .post-card { 
  background: rgba(15,18,25,0.55); 
  border-color: rgba(255,255,255,0.12); 
  box-shadow: 0 4px 14px -2px rgba(0,0,0,0.5);
  color: #e6eef8;
}

body.dark .post-card__media { 
  background: linear-gradient(180deg,#161b21,#12171d); 
  border-color: rgba(255,255,255,0.07); 
  box-shadow: 0 6px 22px -4px rgba(0,0,0,0.55);
}

body.dark .post-card__image { 
  background: #1b2027; 
}

body.dark .post-card__date { 
  color: rgba(255,255,255,0.55); 
}

body.dark .post-card__desc { 
  color: rgba(255,255,255,0.65); 
}

@media (prefers-reduced-motion: reduce) { 
  .post-card { 
    transition: none; 
  }
  .post-card:hover { 
    transform: none; 
  }
}
</style>

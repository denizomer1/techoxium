---
// Simple Universal Home Page without page-factory
import BaseHead from './BaseHead.astro';
import Header from './Header.astro';
import Footer from './Footer.astro';
import PostCard from './PostCard.astro';
import { getCollection } from 'astro:content';
import { t } from '../i18n/utils';

interface Props {
  locale: 'tr' | 'en';
}

const { locale } = Astro.props;

// Get posts directly without factory
const collection = locale === 'en' ? 'blogEn' : 'blog';
const rawPosts = await getCollection(collection as any);
const posts = rawPosts
  .map((p: any) => ({
    ...p,
    data: { ...p.data, pubDate: p.data.pubDate instanceof Date ? p.data.pubDate : new Date(p.data.pubDate as any) },
  }))
  .sort((a: any, b: any) => Number(b.data.pubDate) - Number(a.data.pubDate));

const [firstPost, ...restPosts] = posts;
const baseUrl = locale === 'en' ? '/en' : '/tr';
---

<html lang={locale} class={Astro.cookies.get('theme')?.value === 'dark' ? 'dark' : ''}>
  <head>
    <BaseHead 
      title={t(locale, 'site.title')} 
      description={t(locale, 'site.description')} 
      locale={locale} 
    />
    
    <!-- Structured Data -->
    <script type="application/ld+json" set:html={
      JSON.stringify({
        "@context": "https://schema.org",
        "@type": "WebSite",
        "name": "Techoxium",
        "description": t(locale, 'site.description'),
        "url": "https://techoxium.com",
        "publisher": {
          "@type": "Organization",
          "name": "Techoxium",
          "logo": {
            "@type": "ImageObject",
            "url": "https://techoxium.com/logo.png"
          }
        }
      })
    } />
  </head>
  <body>
    <script>
      (function(){
        const pref = document.cookie.match(/(?:^|; )theme=([^;]+)/)?.[1];
        const sysDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        if(pref === 'dark' || (!pref && sysDark)) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      })();
    </script>
    
    <Header locale={locale} />
    <main>
      <h1>{t(locale, 'blog.title')}</h1>
      <section>
        {firstPost && (
          <div class="featured-list">
            <PostCard
              href={`${baseUrl}/${firstPost.id}/`}
              title={firstPost.data.title || 'Untitled'}
              description={firstPost.data.description || ''}
              pubDate={firstPost.data.pubDate}
              heroImage={firstPost.data.heroImage}
              large={true}
              locale={locale}
              tags={firstPost.data.tags}
            />
          </div>
        )}
        <div class="post-list grid grid-2">
          {restPosts.map((post: any) => (
            <PostCard
              href={`${baseUrl}/${post.id}/`}
              title={post.data.title || 'Untitled'}
              description={post.data.description || ''}
              pubDate={post.data.pubDate}
              heroImage={post.data.heroImage}
              locale={locale}
              tags={post.data.tags}
            />
          ))}
        </div>
      </section>
    </main>
    <Footer />
  </body>
</html>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: rgb(var(--accent-dark));
    font-size: 20px;
    line-height: 1.6;
  }
  
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
    background: linear-gradient(135deg, #667eea, #764ba2);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .featured-list {
    margin-bottom: 2rem;
  }

  .post-list {
    display: grid;
    gap: 2rem;
    margin-bottom: 2rem;
  }

  .grid-2 {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }

  /* Dark mode */
  :global(html.dark) h1 {
    color: #f5f7fa !important;
    background: linear-gradient(135deg, #7fb3ff, #9f7aea) !important;
    -webkit-background-clip: text !important;
    -webkit-text-fill-color: transparent !important;
    background-clip: text !important;
  }

  @media (max-width: 720px) {
    main {
      padding: 1rem;
    }
    
    h1 {
      font-size: 3rem;
    }
    
    .grid-2 {
      grid-template-columns: 1fr;
    }
  }
</style>

---
// Simple Universal Home Page without page-factory
import BaseHead from './BaseHead.astro';
import Header from './Header.astro';
import Footer from './Footer.astro';
import PostCard from './PostCard.astro';
import { getCollection } from 'astro:content';

interface Props {
}

const { } = Astro.props;

// Get posts directly without factory
const rawPosts = await getCollection('blog');
const posts = rawPosts
  .map((p: any) => ({
    ...p,
    data: { ...p.data, pubDate: p.data.pubDate instanceof Date ? p.data.pubDate : new Date(p.data.pubDate as any) },
  }))
  .sort((a: any, b: any) => Number(b.data.pubDate) - Number(a.data.pubDate));

const [firstPost, ...restPosts] = posts;
const baseUrl = '/';
---

<html lang="tr" class={Astro.cookies.get('theme')?.value === 'dark' ? 'dark' : ''}>
  <head>
    <BaseHead 
      title="Techoxium" 
      description="Teknlolojinin Elementi"
    />
    
    <!-- Structured Data -->
    <script type="application/ld+json" set:html={
      JSON.stringify({
        "@context": "https://schema.org",
        "@type": "WebSite",
        "name": "Techoxium",
        "description": "Teknlolojinin Elementi",
        "url": "https://techoxium.com",
        "publisher": {
          "@type": "Organization",
          "name": "Techoxium",
          "logo": {
            "@type": "ImageObject",
            "url": "https://techoxium.com/logo.png"
          }
        }
      })
    } />
  </head>
  <body>
    <script>
      (function(){
        const pref = document.cookie.match(/(?:^|; )theme=([^;]+)/)?.[1];
        const sysDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        if(pref === 'dark' || (!pref && sysDark)) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      })();
    </script>
    
    <Header />
    <main>
      <h1>Blog</h1>
      <section>
        {firstPost && (
          <div class="featured-list">
            <PostCard
              href={`${baseUrl}/${firstPost.id}/`}
              title={firstPost.data.title || 'Untitled'}
              description={firstPost.data.description || ''}
              date={firstPost.data.pubDate}
              image={firstPost.data.heroImage}
              large={true}
              tags={firstPost.data.tags}
            />
          </div>
        )}
        <div class="post-list grid grid-2">
          {restPosts.map((post: any) => (
            <PostCard
              href={`${baseUrl}/${post.id}/`}
              title={post.data.title || 'Untitled'}
              description={post.data.description || ''}
              date={post.data.pubDate}
              image={post.data.heroImage}
              tags={post.data.tags}
            />
          ))}
        </div>
      </section>
    </main>
    <Footer />
  </body>
</html>
